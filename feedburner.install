<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function feedburner_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE IF NOT EXISTS {feedburner_feeds} (
        fid int unsigned NOT NULL default '0',
        local_uri varchar(128) NOT NULL default '',
        fb_uri varchar(100) NOT NULL default '',
        verified int NOT NULL default '0',
        details longtext,
        PRIMARY KEY (fid, uri)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
    case 'pgsql':
      break;
  }
}

/**
 * Implementation of hook_update_x().
 *
 * Adds the FeedBurner table and converts the currently redirecting feeds to
 * use the table since I only used a variable array in the first few versions.
 */
function feedburner_update_1() {
  $items = array();
  $items[] = update_sql("CREATE TABLE IF NOT EXISTS {feedburner_feeds} (
        fid int unsigned NOT NULL default '0',
        local_uri varchar(128) NOT NULL default '',
        fb_uri varchar(100) NOT NULL default '',
        verified int NOT NULL default '0',
        details longtext,
        PRIMARY KEY (fid, uri)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
  $feeds = variable_get('feedburner_feeds', array());
  foreach ($feeds as $local_uri => $fb_uri) {
    $items[] = update_sql("INSERT INTO {feedburner_feeds} (local_uri, fb_uri) VALUES ('". $local_uri ."', '". $fb_uri ."')");
  }
  variable_del('feedburner_feeds');
  return $items;
}

/**
 * Implementation of hook_uninstall().
 * Removes tables and variables used by this module.
 */
function feedburner_uninstall() {
  // Delete all the feedburner variables
  $variables = db_query("SELECT name FROM variable WHERE name LIKE 'feedburner%'");
  while ($variable = db_result($variables)) {
    variable_del($variable);
  }
  // Alternative method, but not as kosher
  //db_query("DELETE FROM {variable} WHERE name LIKE 'feedburner%'");
  //cache_clear_all('variables', 'cache');

  // Remove feedburner table (can't use IF EXISTS since only latest PostgreSQL supports it
  db_query("DROP TABLE {feedburner_feeds}");
}
